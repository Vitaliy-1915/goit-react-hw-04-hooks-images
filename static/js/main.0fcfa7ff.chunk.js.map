{"version":3,"sources":["Components/Searchbar/Searchbar.styles.jsx","Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.styles.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.styles.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.styles.jsx","Components/Button/Button.jsx","Components/Modal/Modal.styles.jsx","Components/Modal/Modal.jsx","Components/FetchApi/FetchImages.jsx","Components/Wrapper/Wrapper.styles.jsx","Components/Wrapper/Wrapper.jsx","App.js","index.js"],"names":["Header","styled","header","Form","form","Button","button","Span","span","Input","input","Searchbar","onSubmit","useState","imageName","setImageName","event","preventDefault","trim","alert","type","name","value","onChange","currentTarget","toLowerCase","autocomplete","placeholder","ImageGalleryItem","li","Image","img","ImageGalleryItems","smallImage","tag","onClick","src","alt","ImageGalleryList","ul","ImageGallery","images","openModal","map","id","webformatURL","largeImageURL","tags","ButtonLoad","Overlay","div","OverlayModal","Modal","onClose","image","useEffect","window","addEventListener","handleKeyPress","removeEventListener","code","target","FetchApi","FetchImages","page","fetch","then","response","ok","json","Promise","reject","Error","WrapperContainer","Wrapper","setPage","setImages","modalIsOpen","setModalIsOpen","selectedImage","setSelectedImage","status","setStatus","error","setError","data","hits","scrollTo","top","document","body","scrollHeight","behavior","catch","color","height","width","timeout","message","length","App","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0fcfa7ff.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Span = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from \"react\";\n//  import { toast } from 'react-toastify';\nimport { Header, Form, Button, Span, Input } from \"./Searchbar.styles\";\n\nexport default function Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (imageName.trim() === \"\") {\n      alert(\"Enter images and photos\");\n      // toast.error(\"введи имя\");\n      return;\n    }\n\n    onSubmit(imageName);\n    setImageName(\"\");\n  };\n\n  const handleFormChange = (event) => {\n    setImageName(\n       event.currentTarget.value.toLowerCase(),\n    );\n  };\n\n\n    return (\n      <Header>\n        <Form onSubmit={handleSubmit}>\n          <Button type=\"submit\">\n            <Span>Search</Span>\n          </Button>\n\n          <Input\n            type=\"text\"\n            name=\"imageName\"\n            value={imageName}\n            onChange={handleFormChange}\n            autocomplete=\"off\"\n            // autofocus\n            placeholder=\"Search images and photos\"\n          />\n        </Form>\n      </Header>\n    );\n  \n}\n\n// class Searchbar extends Component {\n//   state = {\n//     imageName: \"\",\n//     error: null,\n//   };\n\n//   handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     if (this.state.imageName.trim() === \"\") {\n//       alert(\"Enter images and photos\");\n//       // toast.error(\"введи имя\");\n//       return;\n//     }\n\n//     this.props.onSubmit(this.state.imageName);\n//     this.setState({ imageName: \"\" });\n//   };\n\n//   handleFormChange = (event) => {\n//     this.setState({\n//       imageName: event.currentTarget.value.toLowerCase(),\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <Header>\n//         <Form onSubmit={this.handleSubmit}>\n//           <Button type=\"submit\">\n//             <Span>Search</Span>\n//           </Button>\n\n//           <Input\n//             type=\"text\"\n//             name=\"imageName\"\n//             value={this.state.imageName}\n//             onChange={this.handleFormChange}\n//             autocomplete=\"off\"\n//             // autofocus\n//             placeholder=\"Search images and photos\"\n//           />\n//         </Form>\n//       </Header>\n//     );\n//   }\n// }\n\n// export default Searchbar;\n","import styled from \"@emotion/styled\";\n\nexport const ImageGalleryItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import React from \"react\";\nimport { ImageGalleryItem, Image } from \"./ImageGalleryItem.styles\";\n\nfunction ImageGalleryItems({ smallImage, tag, onClick }) {\n  return (\n    <ImageGalleryItem onClick={onClick}>\n      <Image src={smallImage} alt={tag} />\n    </ImageGalleryItem>\n  );\n}\n\nexport default ImageGalleryItems;\n","import styled from \"@emotion/styled\";\n\nexport const ImageGalleryList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React from \"react\";\nimport ImageGalleryItems from \"../ImageGalleryItem/ImageGalleryItem\";\nimport { ImageGalleryList } from \"./ImageGallery.styles\";\n\nfunction ImageGallery({ images, openModal }) {\n  return (\n    <ImageGalleryList>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItems\n          key={id}\n          tag={tags}\n          smallImage={webformatURL}\n          onClick={() => openModal(largeImageURL, tags)}\n        />\n      ))}\n    </ImageGalleryList>\n  );\n}\n\nexport default ImageGallery;\n","import styled from \"@emotion/styled\";\n\nexport const ButtonLoad = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  :hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n","import React from \"react\";\nimport { ButtonLoad } from \"./Button.styles\";\n\nfunction Button({ onClick }) {\n  return (\n    <ButtonLoad type=\"button\" onClick={onClick}>\n      Load more\n    </ButtonLoad>\n  );\n}\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const OverlayModal = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { useEffect } from \"react\";\nimport { Overlay, OverlayModal } from \"./Modal.styles\";\n\nexport default function Modal({onClose, image}) {\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  });\n\n  const handleKeyPress = (event) => {\n    if (event.code !== \"Escape\") {\n      return;\n    }\n    onClose();\n  };\n\n  const handleBackdropClick = (event) => {\n    if (event.currentTarget !== event.target) {\n      return;\n    }\n    onClose();\n  };\n\n\n    return (\n      <Overlay onClick={handleBackdropClick}>\n        <OverlayModal>\n          <img src={image.src} alt={image.alt} />\n        </OverlayModal>\n      </Overlay>\n    );\n  \n}\n\n// class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener(\"keydown\", this.handleKeyPress);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener(\"keydown\", this.handleKeyPress);\n//   }\n\n//   handleKeyPress = (e) => {\n//     if (e.code !== \"Escape\") {\n//       return;\n//     }\n//     this.props.onClose();\n//   };\n\n//   handleBackdropClick = (event) => {\n//     if (event.currentTarget !== event.target) {\n//       return;\n//     }\n\n//     this.props.onClose();\n//   };\n\n//   render() {\n//     const { image } = this.props;\n\n//     return (\n//       <Overlay onClick={this.handleBackdropClick}>\n//         <OverlayModal>\n//           <img src={image.src} alt={image.alt} />\n//         </OverlayModal>\n//       </Overlay>\n//     );\n//   }\n// }\n\n// export default Modal;\n","// import React from 'react'\n\nfunction FetchImages(name, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=21859800-af94843fb327cc57780ddd667&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(`There is no images with name ${name}`));\n  });\n}\n\nconst FetchApi = { FetchImages };\nexport default FetchApi;\n","import styled from \"@emotion/styled\";\n\nexport const WrapperContainer = styled.div`\n  text-align: center;\n  padding: 5px;\n  background-color: #61dafb78;\n`;\n","import { useState, useEffect} from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport Button from \"../Button/Button\";\nimport Modal from \"../Modal/Modal\";\nimport FetchApi from \"../FetchApi/FetchImages\";\n// import { ToastContainer } from 'react-toastify';\nimport { WrapperContainer } from \"./Wrapper.styles\";\n\nexport default function Wrapper() {\n  const [imageName, setImageName] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [status, setStatus] = useState(\"idle\");\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n\n    if (!imageName) {\n      return;\n    };\n\n\n    setStatus(\"pending\");\n\n\n    FetchApi.FetchImages(imageName, page)\n      .then(data => data.hits)\n      .then(image => {\n        setImages(images => ([...images, ...image]));\n        setStatus(\"resolved\");\n\n        if (page !== setPage) {\n          window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: \"smooth\",\n          });\n        };\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(\"rejected\");\n      });\n    \n  }, [imageName, page]);\n\n  const resetState = () => {\n    setPage(1);\n    setImages([]);\n    setStatus(\"idle\");\n  };\n\n  const formSubmit = (imageName) => {\n    resetState();\n    setImageName( imageName );\n  };\n\n  const onLoadMore = () => {\n    setPage((page) => ( page + 1 ));\n  };\n\n  const openModal = (src, alt) => {\n    setModalIsOpen(true);\n    setSelectedImage({ src, alt });\n  };\n\n  const closeModal = () => setModalIsOpen(false);\n\n    return (\n      <WrapperContainer>\n        <Searchbar onSubmit={formSubmit} />\n\n        {modalIsOpen && (\n          <Modal image={selectedImage} onClose={closeModal} />\n        )}\n\n        {status === \"idle\" && <h1>Start your search </h1>}\n\n        {status === \"pending\" && (\n          <Loader\n            type=\"Watch\"\n            color=\"#00BFFF\"\n            height={300}\n            width={300}\n            timeout={3000}\n          />\n        )}\n\n        {status === \"rejected\" && <h1>{error.message}</h1>}\n\n        {\n          status === \"resolved\" && \n            <ImageGallery images={images} openModal={openModal} />\n          // <ToastContainer position=\"top-center\" autoClose={100} closeOnClick={false}/>\n        }\n\n        {status === \"resolved\" && images.length < 1 && <h2>invalid name!!!</h2>}\n\n        {images.length > 0 &&\n          < Button onClick={onLoadMore} />\n        }\n\n      </WrapperContainer>\n    );\n  \n};\n\n// class Wrapper extends Component {\n//   state = {\n//     imageName: \"\",\n//     page: 1,\n//     images: [],\n//     modalIsOpen: false,\n//     selectedImage: null,\n//     status: \"idle\",\n//     error: null,\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const { images } = this.state;\n\n//     if (prevState.imageName !== this.state.imageName) {\n//       this.setState({ status: \"pending\", page: 1, images: [] });\n//       this.getImages();\n//       return;\n//     }\n\n//     if (prevState.page !== this.state.page) {\n//       this.setState({ status: \"pending\" });\n//       this.getImages();\n//     }\n\n//     if (prevState.images !== images) {\n//       window.scrollTo({\n//         top: document.body.scrollHeight,\n//         behavior: \"smooth\",\n//       });\n//     }\n//   }\n\n//   getImages = () => {\n//     const { imageName, page } = this.state;\n//     FetchApi.FetchImages(imageName, page)\n//       .then((data) => data.hits)\n//       .then((image) =>\n//         this.setState((prevState) => ({\n//           images: [...prevState.images, ...image],\n//           status: \"resolved\",\n//         }))\n//       )\n//       .catch((error) => this.setState({ error, status: \"rejected\" }));\n//   };\n\n//   resetState = () => {\n//     this.setState({\n//       // imageName: \"\",\n//       page: 1,\n//       images: [],\n//       // modalIsOpen: false,\n//       // selectedImage: null,\n//       status: \"idle\",\n//     });\n//   };\n\n//   formSubmit = (imageName) => {\n//     this.resetState();\n//     this.setState({ imageName });\n//   };\n\n//   onLoadMore = () => {\n//     this.setState((prevState) => ({ page: prevState.page + 1 }));\n//   };\n\n//   openModal = (src, alt) => {\n//     this.setState({\n//       modalIsOpen: true,\n//       selectedImage: { src, alt },\n//     });\n//   };\n\n//   closeModal = () => this.setState({ modalIsOpen: false });\n\n//   render() {\n//     const { images, error, status, selectedImage, modalIsOpen } = this.state;\n\n//     return (\n//       <WrapperContainer>\n//         <Searchbar onSubmit={this.formSubmit} />\n\n//         {modalIsOpen && (\n//           <Modal image={selectedImage} onClose={this.closeModal} />\n//         )}\n\n//         {status === \"idle\" && <h1>Start your search </h1>}\n\n//         {status === \"pending\" && (\n//           <Loader\n//             type=\"Watch\"\n//             color=\"#00BFFF\"\n//             height={300}\n//             width={300}\n//             timeout={3000}\n//           />\n//         )}\n\n//         {status === \"rejected\" && <h1>{error.message}</h1>}\n\n//         {\n//           status === \"resolved\" && (\n//             <ImageGallery images={images} openModal={this.openModal} />\n//           )\n//           // <ToastContainer position=\"top-center\" autoClose={100} closeOnClick={false}/>\n//         }\n\n//         {status === \"resolved\" && images.length < 1 && <h2>invalid name!!!</h2>}\n\n//         {images.length > 0 && <Button onClick={this.onLoadMore} />}\n//       </WrapperContainer>\n//     );\n\n//     // if (status === \"idle\") {\n//     //   return (\n//     //     <WrapperContainer>\n//     //       <Searchbar onSubmit={this.formSubmit} />\n//     //       {/* <ImageGallery images={images} />  */}\n//     //       <h1>Start your search </h1>\n//     //     </WrapperContainer>\n//     //   );\n//     // }\n\n//     // if (status === \"pending\") {\n//     //   return (\n//     //     <WrapperContainer>\n//     //       <Searchbar onSubmit={this.formSubmit} />\n//     //       {/* <ImageGallery images={images} /> */}\n//     //       {/* {images.length > 0 && <Button onClick={this.onLoadMore} />} */}\n//     //       <Loader\n//     //         type=\"Watch\"\n//     //         color=\"#00BFFF\"\n//     //         height={300}\n//     //         width={300}\n//     //         timeout={3000}\n//     //       />\n//     //     </WrapperContainer>\n//     //   );\n//     // }\n\n//     // if (status === \"rejected\") {\n//     //   return (\n//     //     <WrapperContainer>\n//     //       <Searchbar onSubmit={this.formSubmit} />\n//     //       {/* <ImageGallery images={images} /> */}\n//     //       <h1>{error.message}</h1>\n//     //     </WrapperContainer>\n//     //   );\n//     // }\n\n//     // if (status === \"resolved\") {\n//     //   return (\n//     //     <WrapperContainer>\n//     //       <Searchbar onSubmit={this.formSubmit} />\n//     //       <ImageGallery images={images} openModal={this.openModal} />\n//     //       {images.length > 0 && <Button onClick={this.onLoadMore} />}\n//     //       {images.length < 1 && <h2>invalid name!!!</h2>}\n//     //       {modalIsOpen && (\n//     //         <Modal image={selectedImage} onClose={this.closeModal} />\n//     //       )}\n//     //       {/* <ToastContainer\n//     //             position=\"top-center\"\n//     //             autoClose={100}\n//     //             closeOnClick={false}\n//     //           /> */}\n//     //     </WrapperContainer>\n//     //   );\n//     // }\n//   }\n// }\n\n// export default Wrapper;\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport Wrapper from \"./Components/Wrapper/Wrapper\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}